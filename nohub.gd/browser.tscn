[gd_scene load_steps=2 format=3 uid="uid://4n0eqw25becg"]

[sub_resource type="GDScript" id="GDScript_xkt7l"]
script/source = "extends Control

@onready var host_input: LineEdit = %\"Host Input\"
@onready var connect_button: Button = %\"Connect Button\"
@onready var disconnect_button: Button = %\"Disconnect Button\"
@onready var status_label: Label = %\"Status Label\"
@onready var lobby_list: ItemList = %\"Lobby List\"
@onready var create_name_input: LineEdit = %\"Lobby Name Input\"
@onready var create_button: Button = %\"Create Lobby Button\"
@onready var address_label: Label = %\"Address Label\"

var list_interval: float = 2.0
var time: float = 0.0

var _connection: StreamPeerTCP = null
var _client: NohubClient = null
var _last_list: float = -1.
var _lobbies_in_list: Array[NohubLobby] = []

func _ready():
	connect_button.pressed.connect(_connect)
	disconnect_button.pressed.connect(_disconnect)
	create_button.pressed.connect(_create_lobby)
	lobby_list.item_activated.connect(_join_lobby)
	
	address_label.text = \"...\"
	var ip := await _get_ip()
	address_label.text = ip

func _process(dt: float) -> void:
	time += dt
	status_label.text = \"None\"

	if _connection != null:
		match _connection.get_status():
			StreamPeerTCP.STATUS_NONE: status_label.text = \"None\"
			StreamPeerTCP.STATUS_CONNECTING: status_label.text = \"Connecting...\"
			StreamPeerTCP.STATUS_CONNECTED: status_label.text = \"Connected\"
			StreamPeerTCP.STATUS_ERROR: status_label.text = \"Error\"
		
		_connection.poll()

	if _client != null:
		_client.poll()

		if time >= _last_list + list_interval:
			_update_list()
			_last_list = time

func _connect() -> void:
	var input := host_input.text
	var host := input
	var port := 9980

	if input.contains(\":\"):
		var at := input.rfind(\":\")
		host = input.substr(0, at)
		port = int(input.substr(at + 1))

	print(\"Connecting to nohub at %s:%d\" % [host, port])

	_connection = StreamPeerTCP.new()
	_connection.connect_to_host(host, port)

	_client = NohubClient.new(_connection)

func _disconnect() -> void:
	if _connection == null:
		return

	print(\"Disconnecting from host\")
	_connection.disconnect_from_host()
	_connection = null
	_client = null

	lobby_list.clear()
	_lobbies_in_list.clear()

func _create_lobby() -> void:
	var name := create_name_input.text
	var lobby := await _client.create_lobby(\"enet://\" + address_label.text, { \"name\": name })
	print(\"Created lobby #%s\" % lobby.id)

	create_name_input.text = \"\"

func _join_lobby(clicked_idx: int) -> void:
	var row_idx := clicked_idx / lobby_list.max_columns - 1
	if row_idx < 0:
		# User clicked header row, do nothing
		return

	var lobby := _lobbies_in_list[row_idx]
	var address := await _client.join_lobby(lobby.id)

	if not address:
		OS.alert(\"Failed to join lobby #%s!\" % [lobby.id])
	else:
		OS.alert(\"Lobby address: %s\" % [address])

func _update_list() -> void:
	if _client == null: return

	var lobbies := await _client.list_lobbies()
	print(\"Received lobbies: %s\" % [lobbies])

	# Add header
	if lobby_list.item_count == 0:
		lobby_list.add_item(\"ID\", null, false)
		lobby_list.add_item(\"Name\", null, false)
		lobby_list.add_item(\"Locked?\", null, false)
		lobby_list.add_item(\"Hidden?\", null, false)
		lobby_list.add_item(\"Data\", null, false)

	# Remove lobbies that are no longer in the list
	var at := lobby_list.max_columns
	while at < lobby_list.item_count:
		var id_in_list := lobby_list.get_item_text(at)

		# Lobby still in list, do nothing
		if lobbies.any(func(it: NohubLobby): return it.id == id_in_list):
			at += lobby_list.max_columns
			continue

		# Remove row
		for i in lobby_list.max_columns:
			lobby_list.remove_item(at)

	# Add lobbies that are not in the list yet
	for lobby in lobbies:
		# Lobby already in list, do nothing
		if _lobbies_in_list.any(func(it: NohubLobby): return it.id == lobby.id):
			continue

		lobby_list.add_item(lobby.id)
		lobby_list.add_item(lobby.data.get(\"name\", \"\"))
		lobby_list.add_item(\"Locked\" if lobby.is_locked else \"\")
		lobby_list.add_item(\"Hidden\" if not lobby.is_visible else \"Public\")
		lobby_list.add_item(JSON.stringify(lobby.data))

	_lobbies_in_list.assign(lobbies)

func _get_ip() -> String:
	var ip := await _get_ip_ipify()
	if not ip: ip = _get_ip_local()

	return ip

func _get_ip_ipify() -> String:
	var request := HTTPRequest.new()
	add_child(request)
	
	if request.request(\"https://api.ipify.org/\") != OK:
		return \"\"

	var response = await request.request_completed
	var result := response[0] as int
	var response_code := response[1] as int
	var headers := response[2] as PackedStringArray
	var body := response[3] as PackedByteArray

	if result != HTTPRequest.RESULT_SUCCESS or response_code != 200:
		return \"\"

	return body.get_string_from_utf8()

func _get_ip_local() -> String:
	return IP.get_local_addresses()[0]
"

[node name="Browser" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_xkt7l")

[node name="HBoxContainer" type="HBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Left Panel" type="PanelContainer" parent="HBoxContainer"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="HBoxContainer/Left Panel"]
layout_mode = 2

[node name="Host Input" type="LineEdit" parent="HBoxContainer/Left Panel/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
placeholder_text = "Address"

[node name="Buttons Container" type="HBoxContainer" parent="HBoxContainer/Left Panel/VBoxContainer"]
layout_mode = 2

[node name="Connect Button" type="Button" parent="HBoxContainer/Left Panel/VBoxContainer/Buttons Container"]
unique_name_in_owner = true
layout_mode = 2
text = "Connect"

[node name="Disconnect Button" type="Button" parent="HBoxContainer/Left Panel/VBoxContainer/Buttons Container"]
unique_name_in_owner = true
layout_mode = 2
text = "Disconnect"

[node name="Status Container" type="HBoxContainer" parent="HBoxContainer/Left Panel/VBoxContainer"]
layout_mode = 2

[node name="Status Prefix" type="Label" parent="HBoxContainer/Left Panel/VBoxContainer/Status Container"]
layout_mode = 2
text = "Status:"

[node name="Status Label" type="Label" parent="HBoxContainer/Left Panel/VBoxContainer/Status Container"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
text = "None"

[node name="HSeparator" type="HSeparator" parent="HBoxContainer/Left Panel/VBoxContainer"]
layout_mode = 2

[node name="Address Prefix" type="Label" parent="HBoxContainer/Left Panel/VBoxContainer"]
layout_mode = 2
text = "Your address:"

[node name="Address Label" type="Label" parent="HBoxContainer/Left Panel/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2

[node name="HSeparator2" type="HSeparator" parent="HBoxContainer/Left Panel/VBoxContainer"]
layout_mode = 2

[node name="Help Label" type="Label" parent="HBoxContainer/Left Panel/VBoxContainer"]
layout_mode = 2
text = "Double click a lobby to join"

[node name="VBoxContainer" type="VBoxContainer" parent="HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="List Panel" type="ScrollContainer" parent="HBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="Lobby List" type="ItemList" parent="HBoxContainer/VBoxContainer/List Panel"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
max_text_lines = 4
max_columns = 5
same_column_width = true
fixed_column_width = 160

[node name="Create Container" type="HBoxContainer" parent="HBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Lobby Name Label" type="Label" parent="HBoxContainer/VBoxContainer/Create Container"]
layout_mode = 2
text = "Lobby name: "

[node name="Lobby Name Input" type="LineEdit" parent="HBoxContainer/VBoxContainer/Create Container"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3

[node name="Create Lobby Button" type="Button" parent="HBoxContainer/VBoxContainer/Create Container"]
unique_name_in_owner = true
layout_mode = 2
text = "Create Lobby"
